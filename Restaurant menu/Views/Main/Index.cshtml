@using Restaurant_menu.Controllers;
@using Restaurant_menu.Pagination;
@using RestaurantMenu.BLL.Interfaces;
@inject ITools tools
@model IndexViewModel
@{
    ViewData["Title"] = "Index";
}
<!DOCTYPE html>
<html>
<head>

    <title>Restaurant Menu</title>

    <!--Main Style-->
    <link rel="stylesheet" href="StyleSheet.css" />

    <!--Material Icons-->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />

    <!--Roboto Font-->
    <link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet" />

    <!--Jquery-->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

</head>
<body>
    <header>
        <h2 style="text-align: center">Меню ресторана</h2>
        <form id="btnCreate" action="/Create"><button class="button create" type="submit">Создать</button></form>
    </header>

    <!--Load Animation-->
    <div class="dvProgress" style="display:flex; justify-content:center; align-items:center">
        <img src="https://media.giphy.com/media/feN0YJbVs0fwA/giphy.gif" />
    </div>
    <script>
        $(document).ready(function () {
            $(".dvProgress").hide();
        })
    </script>

    <!------------------->
    <div class="mainData">

            <table id="dishes">
                <thead>
                    <tr id="SortFields">
                        <th id='{"@FieldTypes.Name": "@Model.Sorting.Where(p=>p.Key==FieldTypes.Name).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton" style="width: 23px">Название</th>
                        <th id='{"@FieldTypes.CreateDate": "@Model.Sorting.Where(p=>p.Key==FieldTypes.CreateDate).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton">Дата создания</th>
                        <th id='{"@FieldTypes.Consistence": "@Model.Sorting.Where(p=>p.Key==FieldTypes.Consistence).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton">Состав</th>
                        <th id='{"@FieldTypes.Description": "@Model.Sorting.Where(p=>p.Key==FieldTypes.Description).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton">Описание</th>
                        <th id='{"@FieldTypes.Price": "@Model.Sorting.Where(p=>p.Key==FieldTypes.Price).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton">Цена</th>
                        <th id='{"@FieldTypes.Gram": "@Model.Sorting.Where(p=>p.Key==FieldTypes.Gram).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton">Граммовка</th>
                        <th id='{"@FieldTypes.Calorific": "@Model.Sorting.Where(p=>p.Key==FieldTypes.Calorific).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton">Калорийность</th>
                        <th id='{"@FieldTypes.CookTime": "@Model.Sorting.Where(p=>p.Key==FieldTypes.CookTime).Select(p=>p.IsSorted).FirstOrDefault()"}' class="submitButton">Время Приготовления</th>

                        <th colspan="3"><button class="material-icons" id="search">search</button></th>
                    </tr>
                </thead>

                <tr id="SearchFields">

                    <th><input type="text" class="searchField" name="@FieldTypes.Name" value="@Model.Filters.Where(p => p.Key == FieldTypes.Name).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th><input type="text" class="searchField" name="@FieldTypes.CreateDate"  value="@Model.Filters.Where(p => p.Key == FieldTypes.CreateDate).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th><input type="text" class="searchField" name="@FieldTypes.Consistence"  value="@Model.Filters.Where(p => p.Key == FieldTypes.Consistence).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th><input type="text" class="searchField" name="@FieldTypes.Description" style="width: 56px"  value="@Model.Filters.Where(p => p.Key == FieldTypes.Description).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th><input type="text" class="searchField" name="@FieldTypes.Price" style="width: 56px"  value="@Model.Filters.Where(p => p.Key == FieldTypes.Price).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th><input type="text" class="searchField" name="@FieldTypes.Gram" style="width: 56px"  value="@Model.Filters.Where(p => p.Key == FieldTypes.Gram).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th><input type="text" class="searchField" name="@FieldTypes.Calorific"  value="@Model.Filters.Where(p => p.Key == FieldTypes.Calorific).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th><input type="text" class="searchField" name="@FieldTypes.CookTime"  value="@Model.Filters.Where(p => p.Key == FieldTypes.CookTime).Select(p => p.Value).FirstOrDefault()"/></th>
                    <th colspan="3"><button type="submit" class="submitButton"><span class="material-icons">done</span></button></th>
                </tr>

                <tbody id="DishesBody">

                    @foreach (var dish in Model.Dishes)
                     {
                        var ts = TimeSpan.FromMinutes(dish.CookTime);

                        var cookTime = ts.Hours == 0 ? ts.ToString("%m") : ts.ToString("h' ч. 'mm");
                        cookTime = cookTime + " мин.";

                        var calorific = tools.CalculateCalorific(dish.Calorific, dish.Gram);
                        <tr id="@dish.Id">

                            <td class="dishesItem" style="width: 23px">@dish.Name</td>
                            <td class="dishesItem"> @dish.CreateDate</td>
                            <td class="dishesItem"> @dish.Consist</td>
                            <td class="dishesItem"> @dish.Description</td>
                            <td class="dishesItem"> @dish.Price</td>
                            <td class="dishesItem"> @dish.Gram</td>
                            <td class="dishesItem"> @calorific</td>
                            <td style="white-space:nowrap;" class="dishesItem"> @cookTime</td>

                            <td class="action" style="padding: 7px;"><a href="@Url.Action("Read")?id=@dish.Id" class="material-icons">remove_red_eye</a></td>
                            <td class="action" style="padding: 7px;"><a href="@Url.Action("Edit")?id=@dish.Id" class="material-icons">create</a></td>
                            <td class="del" style="padding: 7px;"><a name="@dish.Id" class="material-icons">clear</a></td>

                        </tr>
                     }

                </tbody>
            </table>

        <script>

            /*Delete items*/
            $('.del').each(function () {
                var id = $(this).children('a').attr('name');

                 $(this).children('a').click(
                     function () {
                         $(this).parent('.del').parent('tr').remove();
                         $.post("@Url.Action("Delete", "Logic")?id=" + id, null, function(result) { $('#Filtred').text(result);  $('#AllItemsCount').text(result);});
                    });
            });
          

            /*Sorting*/
            $('.tableHeader').each(function () {
                $(this).css('cursor', 'pointer');
                $(this).click(function () {
                    var name = $(this).attr('id');
                    console.log("SORT\n " + name);
                        $.post("@Url.Action("Sorting", "Filter")?name=" + name, null, Sort)
                })
            })
            function Sort(result) {
                var list = $('tbody > tr').get();
                for (var i = 0; i < result.length; i++) {
                    var item = list.find(x => x.getAttribute('id') == result[i]);
                    if (item != undefined) {
                        list.find(x => x.getAttribute('id') == result[i]).parentNode.appendChild(list.find(x => x.getAttribute('id') == result[i]));
                        console.log(item);
                    }
                }
            }
        </script>
        <script src="/js/site.js"></script>
    </div>

    <p id="itemsCount"><label id="Filtred">@Model.Dishes.Count()</label> из <label id="AllItemsCount">@Model.ItemsCount</label></p>

    <ul class="pagination">

        @if (Model.PageViewModel.HasPreviousPage)
        {
            int value = Model.PageViewModel.PageNumber - 1;
            <li class="submitButton" id="@value"><span class="material-icons">arrow_back_ios</span> </li>
        }
        @for (int i = Model.PageViewModel.PageNumber - 1; i > 0; i--)
        {
            if (i == Model.PageViewModel.PageNumber - 3)
            {
                break;
            }
            <li class="submitButton" id="@i"><span>@i</span> </li>
        }

        <li class="submitButton" id="@Model.PageViewModel.PageNumber"><span>@Model.PageViewModel.PageNumber</span> </li>

        @for (int i = Model.PageViewModel.PageNumber +1; i<= Model.PageViewModel.TotalPages; i++)
        {
            if (i == Model.PageViewModel.PageNumber+3)
            {
                break;
            }
            <li class="submitButton" id="@i"><span>@i</span> </li>
        }

        @if (Model.PageViewModel.HasNextPage)
        {
            int value = Model.PageViewModel.PageNumber + 1;
            <li class="submitButton" id="@value"><span class="material-icons">arrow_forward_ios</span> </li>
        }
    </ul>
    <script>

        $('.submitButton').each(function () {


    $(this).click(function () {
            var constraint;
            var constraints = new Array(8);
            var page;
            $('.searchField').each(function () {
                constraint = {
                    key: $(this).attr('name'),
                    value: $(this).val()
                }
                constraints.push(constraint);
            });
            var sortType;
            if ($(this).is('th')) {

                var fid = $(this).attr('id');
                var parsedId = JSON.parse(fid);
                for (var i in parsedId) {
                        sortType = i;
                }
            } else {

                $('#SortFields').children("th").each(function () {
                    if ($(this).attr('id') == undefined) { return false; }

                    var fid = $(this).attr('id');
                    var parsedId = JSON.parse(fid);
                    for (var i in parsedId) {
                        if (parsedId[i] == 'True') {
                            sortType = i;
                        }
                    }

                });
            }

            if ($(this).is('li')) {
                page = $(this).attr('id');
            } else {
                page = @Model.PageViewModel.PageNumber;
            }
            var uriConstraints = encodeURIComponent(JSON.stringify(constraints));
            // var urisorttype = encodeURIComponent(sortType);
            window.location.href = '/?constraints=' + uriConstraints + '&fieldTypeSort=' + sortType + '&page=' + page;

            //$.get('/?constraints=' + constraints + '&fieldTypeSort=' + sortType + '&page=' + page, null, function (result) {
            //    console.log(result);
            //});

    })
});


    </script>
</body>
</html>


