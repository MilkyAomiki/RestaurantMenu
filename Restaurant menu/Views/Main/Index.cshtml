@using Restaurant_menu.Controllers;
@using Restaurant_menu.Pagination;
@using RestaurantMenu.BLL.Interfaces;
@using RestaurantMenu.BLL.Mapper;
@inject ITools tools
@model IndexViewModel
@{
    ViewData["Title"] = "Index";
}
<!DOCTYPE html>
<html>
<head>

    <title>Restaurant Menu</title>

    <!--Main Style-->
    <link rel="stylesheet" href="StyleSheet.css" />

    <!--Material Icons-->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />

    <!--Roboto Font-->
    <link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet" />

    <!--Jquery-->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

</head>
<body>
    <header>
        <h2 style="text-align: center">Меню ресторана</h2>
        <form id="btnCreate" action="/Create"><button class="button create" type="submit">Создать</button></form>
    </header>

    <!--Load Animation-->
    <div class="dvProgress" style="display:flex; justify-content:center; align-items:center">
        <img src="https://media.giphy.com/media/feN0YJbVs0fwA/giphy.gif" />
    </div>
    <!------------------->
    
    <div class="mainData">

        <table id="dishes">
            <thead>

                <!--Creates json inside id and  choose appropriate icon-->
                <!--{FieldName: IsSorted(bool), Decs: (bool)}-->
                <tr id="SortFields">
                    @foreach (var item in Enum.GetNames(typeof(FieldTypes)))
                    {
                        if (item == "None")
                        {
                            continue;
                        }
                        var FieldType = (FieldTypes)Enum.Parse(typeof(FieldTypes), item);

                       <th id='{"@item": "@Model.Sorting.Where(p => p.Key == FieldType).Select(p => p.IsSorted).FirstOrDefault()", "Desc": "@Model.Sorting.Where(p => p.Key == FieldType).Select(p => p.Desc).FirstOrDefault()" }' class="submitButton" style="width: 23px">@FieldType.GetName() <span class="material-icons">@(Model.Sorting.Where(p => p.Key == FieldType).Select(p => p.IsSorted).FirstOrDefault() ? Model.Sorting.Where(p => p.Key == FieldType).Select(p => p.Desc).FirstOrDefault() ? "keyboard_arrow_down" : "keyboard_arrow_up" : "")</span></th>
                    }

                    <th colspan="3"><button class="material-icons" id="search">search</button></th>
                </tr>
            </thead>

            <tr id="SearchFields">
                @foreach (var item in Enum.GetNames(typeof(FieldTypes)))
                {
                    if (item == "None")
                    {
                        continue;
                    }
                    var FieldType = (FieldTypes)Enum.Parse(typeof(FieldTypes), item);
                    <th><input type="text" class="searchField" name="@FieldType" value="@Model.Filters.Where(p => p.Key == FieldType).Select(p => p.Value).FirstOrDefault()" /></th>
                }

                <th colspan="3"><button type="submit" class="submitButton"><span class="material-icons">done</span></button></th>
            </tr>
            <!--Load Animation-->
            @*<tr>
            <td class="dvProgress" style=" text-align:center;" colspan="8"><img src="https://media.giphy.com/media/feN0YJbVs0fwA/giphy.gif" /></td>
        </tr>*@
            <tbody id="DishesBody">

                @foreach (var dish in Model.Dishes)
                {

                    var ts = TimeSpan.FromMinutes(dish.CookTime);

                    var cookTime = ts.Hours == 0 ? ts.Minutes + " мин" : Math.Floor(ts.TotalHours) + " ч " + ts.Minutes + " мин";


                    <tr id="@dish.Id">

                        <td class="dishesItem" style="width: 23px">@dish.Name</td>
                        <td class="dishesItem"> @dish.CreateDate</td>
                        <td class="dishesItem"> @dish.Consist</td>
                        <td class="dishesItem"> @dish.Description</td>
                        <td class="dishesItem"> @dish.Price</td>
                        <td class="dishesItem"> @dish.Gram</td>
                        <td class="dishesItem"> @dish.TotalCalorific</td>
                        <td style="white-space:nowrap;" class="dishesItem"> @cookTime</td>

                        <td class="action" style="padding: 7px;"><a href="@Url.Action("Read")?id=@dish.Id" class="material-icons">remove_red_eye</a></td>
                        <td class="action" style="padding: 7px;"><a href="@Url.Action("Edit")?id=@dish.Id" class="material-icons">create</a></td>
                        <td class="del" style="padding: 7px;"><a name="@dish.Id" class="material-icons">clear</a></td>

                    </tr>
                }

            </tbody>
        </table>
        <script>
            $(document).ready(function () {
                $(".dvProgress").hide();
            })
        </script>
        <script>
            $('.button create').click(function () {
                $(".mainData").hide();
                $(".dvProgress").show();
            })

            /*Delete items*/
            $('.del').each(function () {
                var id = $(this).children('a').attr('name');

                 $(this).children('a').click(
                     function () {
                         var dishName = $('#' + id).children('.dishesItem').eq(0).text();
                         var userConfirm = confirm('Удалить блюдо ' + dishName + '?')
                         if (userConfirm) {
                             $(this).parent('.del').parent('tr').remove();
                             let count = parseInt($('#Filtred').text());
                             $.post("@Url.Action("DeleteItem")?id=" + id, null, function (result) { $('#Filtred').text(--count);  $('#AllItemsCount').text(result);});
                         }

                    });
            });


     
        </script>
        <script src="/js/site.js"></script>
    </div>
    <button type="button" id="copyToClipboard">Скопировать URl</button>
    <p id="itemsCount"><label id="Filtred">@Model.Dishes.Count()</label> из <label id="AllItemsCount">@Model.ItemsCount</label></p>

    <ul class="pagination">

        @if (Model.PageViewModel.HasPreviousPage)
        {
            int value = Model.PageViewModel.PageNumber - 1;
            <li class="submitButton" id="@value"><span class="material-icons">arrow_back_ios</span> </li>
        }
        @for (int i = Model.PageViewModel.PageNumber - 1; i > 0; i--)
        {
            if (i == Model.PageViewModel.PageNumber - 3)
            {
                break;
            }
            <li class="submitButton" id="@i"><span>@i</span> </li>
        }

        <li class="submitButton" id="@Model.PageViewModel.PageNumber"><span>@Model.PageViewModel.PageNumber</span> </li>

        @for (int i = Model.PageViewModel.PageNumber + 1; i <= Model.PageViewModel.TotalPages; i++)
        {
            if (i == Model.PageViewModel.PageNumber + 3)
            {
                break;
            }
            <li class="submitButton" id="@i"><span>@i</span> </li>
        }

        @if (Model.PageViewModel.HasNextPage)
        {
            int value = Model.PageViewModel.PageNumber + 1;
            <li class="submitButton" id="@value"><span class="material-icons">arrow_forward_ios</span> </li>
        }
    </ul>
    <script>
        $('#copyToClipboard').click(function () {
            navigator.clipboard.writeText(window.location.href);
        });


        $('.submitButton').each(function () {

            $(this).click(function () {
                $(".mainData").hide();
                $(".dvProgress").show();

            var constraint;
            var constraints = new Array();
            var page;
            $('.searchField').each(function () {
                constraint = {
                    key: $(this).attr('name'),
                    value: $(this).val()
                }
                constraints.push(constraint);
            });

            var sortType;
            var descSort;
            if ($(this).is('th')) {

                var fid = $(this).attr('id');
                var parsedId = JSON.parse(fid);
                for (var i in parsedId) {
                    if (i != 'Desc') {
                        sortType = i;

                        //Is Active?
                        if (parsedId[i] == 'True') {
                            //Is already descending?
                            if (parsedId['Desc'] == 'True') {
                                //It's not a descending
                                descSort = false;
                                //No?
                            } else {
                                //It's descending
                                descSort = true;
                            }
                        //Isn't active?
                        } else {
                            // It's not a descending
                            descSort = false;
                        }
                    }
                }
            } else {

                $('#SortFields').children("th").each(function () {
                    if ($(this).attr('id') == undefined) { return false; }

                    var fid = $(this).attr('id');
                    var parsedId = JSON.parse(fid);
                    for (var i in parsedId) {

                        if (i != 'Desc') {
                            if (parsedId[i] == 'True') {
                                sortType = i;
                                descSort = parsedId['Desc'];
                            }
                        }
                    }

                });
            }

            if ($(this).is('li')) {
                page = $(this).attr('id');
            } else {
                page = @Model.PageViewModel.PageNumber;
        }
        var constraintQueryString = "";
        constraints.forEach(({ key, value }) => constraintQueryString += key +'='+ value +'&');

             var uriConstraints = encodeURIComponent(JSON.stringify(constraints));
             window.location.href = '/?'+constraintQueryString + 'fieldTypeSort=' + sortType + '&desc=' + descSort + '&page=' + page;
    })
});


    </script>
</body>
</html>


