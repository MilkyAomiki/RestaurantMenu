@using RestaurantMenu.BLL.DTO
@using Restaurant_menu.Controllers;
@model IEnumerable<Dish>
@{
    ViewData["Title"] = "Index";
}
<!DOCTYPE html>
<html>
<head>
    <title>Restaurant Menu</title>

    <!--Main Style-->
    <link rel="stylesheet" href="StyleSheet.css" />

    <!--Material Icons-->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <!--Roboto Font-->
    <link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet">

    <!--Jquery-->
    <script src="/lib/jquery/dist/jquery.min.js"></script>

</head>
<body>
    <header>
        <h2 style="text-align: center">Меню ресторана</h2>
        <form id="btnCreate" action="/Create"><button class="button create" type="submit">Создать</button></form>
    </header>




    <div class="mainData">
        @{
            int filtred = 0;
        }
        @using (Html.BeginForm("Filtration", "Filter"))
        {
            <table id="dishes">
                <thead>
                    <tr>
                        <th id="hName"        class="tableHeader"style="width: 23px">Название</th>
                        <th id="hCreateDate"  class="tableHeader">Дата создания</th>
                        <th id="hConsistence" class="tableHeader">Состав</th>
                        <th id="hDescription" class="tableHeader">Описание</th>
                        <th id="hPrice"       class="tableHeader">Цена</th>
                        <th id="hGram"        class="tableHeader">Граммовка</th>
                        <th id="hCalorific"   class="tableHeader">Калорийность</th>
                        <th id="hCookTime"    class="tableHeader">Время Приготовления</th>

                        <th colspan="3"><button class="material-icons" id="search">search</button></th>
                    </tr>
                </thead>

                <tr id="SearchFields">

                    <th><input type="text" class="searchField" name="name" /></th>
                    <th><input type="text" class="searchField" name="createdate" /></th>
                    <th><input type="text" class="searchField" name="consistence" /></th>
                    <th><input type="text" class="searchField" name="description" style="width: 56px" /></th>
                    <th><input type="text" class="searchField" name="price" style="width: 56px" /></th>
                    <th><input type="text" class="searchField" name="gram" style="width: 56px" /></th>
                    <th><input type="text" class="searchField" name="calorific" /></th>
                    <th><input type="text" class="searchField" name="cooktime" /></th>
                    <th colspan="3"></th>
                </tr>

                <tbody>

                    @foreach (var dish in Model)
                    {
                        var ts = TimeSpan.FromMinutes(dish.CookTime);
                        
                        var cookTime = ts.Hours == 0? ts.ToString("%m"): ts.ToString("h' ч. 'mm");
                        cookTime = cookTime + " мин.";
                       

                        <tr id="@dish.Id" >
                            
                            <td class="dishesItem" style="width: 23px">@dish.Name</td>
                            <td class="dishesItem"> @dish.CreateDate</td>
                            <td class="dishesItem"> @dish.Consist</td>
                            <td class="dishesItem"> @dish.Description</td>
                            <td class="dishesItem"> @dish.Price</td>
                            <td class="dishesItem"> @dish.Gram</td>
                            <td class="dishesItem"> @dish.Calorific</td>
                            <td style="white-space:nowrap;" class="dishesItem"> @cookTime</td>

                            <td class="action" style="padding: 7px;"><a href="@Url.Action("Read")?id=@dish.Id" class="material-icons">remove_red_eye</a></td>
                            <td class="action" style="padding: 7px;"><a href="@Url.Action("Edit")?id=@dish.Id" class="material-icons">create</a></td>
                            <td class="del" style="padding: 7px;"><a name="@dish.Id" class="material-icons">clear</a></td>

                        </tr>
                    }

                </tbody>
            </table>
        }


        <script>
            /*Delete items*/
            $('.del').each(function () {
                var id = $(this).children('a').attr('name');

                 $(this).children('a').click(
                    function () {
                         $(this).parent('.del').parent('tr').hide();
                         $.post("@Url.Action("Delete", "Logic")?id=" + id, null, function(result) { $('#Filtred').text(result);  $('#AllItemsCount').text(result);});
                    });
            });

            /*Filtration*/
            $('#SearchFields').children('th').children('input').each(function () {
                $(this).keyup(function (e) {
                    console.log($(this).attr('name') + ': ' + $(this).val());
                    var name = $(this).attr('name');
                    var value = $(this).val();
                    $.post("@Url.Action("Filtration", "Filter")?name=" + name + "&filter=" + value, null, Filter)
                    function Filter(result) {
                        console.log(result);
                        $('#Filtred').text(result.length);
                        $('tbody').children('tr').each(function () {
                            var matched = false;

                            for (var i = 0; i < result.length; i++) {
                                if ($(this).attr('id') == result[i]){
                                    matched = true;
                                    console.log(matched);
                                }
                            }
                            if (matched == false) {
                                $(this).hide();
                                $('#SearchFields').css('display', 'table-row');

                            } else {

                                $(this).show();
                                $('#SearchFields').css('display', 'table-row');
                            }
                        })
                    }
                });
            });

            /*Sorting*/
            $('.tableHeader').each(function () {
                $(this).css('cursor', 'pointer');
                $(this).click(function () {
                    var name = $(this).attr('id');
                    console.log("SORT\n " + name);
                        $.post("@Url.Action("Sorting", "Filter")?name=" + name, null, Sort) 
                })
            })
            function Sort(result) {
                var list = $('tbody > tr').get();
                for (var i = 0; i < result.length; i++) {
                    var item = list.find(x => x.getAttribute('id') == result[i]);
                    if (item != undefined) {
                        list.find(x => x.getAttribute('id') == result[i]).parentNode.appendChild(list.find(x => x.getAttribute('id') == result[i]));
                        console.log(item);
                    }
                }
            }
        </script>
        <script src="/js/site.js"></script>
    </div>

    <p id="itemsCount"><label id="Filtred">@Model.Count()</label> из <label id="AllItemsCount">@Model.Count()</label></p>

    <ul class="pagination">
        @for (int i = 1; i <= Math.Round((double)23 / 20, MidpointRounding.ToPositiveInfinity); i++)
        {
            <li><a href="">@i</a></li>
        }
    </ul>

</body>
</html>


